import{f as C,H as M,I as E,r as N,J as D,K as R,V as O}from"./vendor-Dobm3Lbi.js";import{h as Y}from"./ApiBase-DjuaOdbS.js";import{Q as T,E as A}from"./index-C2PfOp2L.js";const i=new Date,w={id:i.getFullYear().toString().toLowerCase(),label:i.getFullYear().toString(),value:i.getFullYear()},G={id:i.getMonth().toString().toLowerCase(),label:i.toLocaleString("en-GB",{month:"long"}),value:(i.getMonth()+1).toLocaleString("en-GB",{minimumIntegerDigits:2,maximumFractionDigits:0,useGrouping:!1})},B=Array(13).fill("").map((a,t)=>{if(t===0)return{id:"",label:"Select Month",value:""};const e=new Date(0,t-1),n=e.toLocaleString("en-GB",{month:"long"});return{id:n.toLowerCase(),label:n,value:(e.getMonth()+1).toLocaleString("en-GB",{minimumIntegerDigits:2,maximumFractionDigits:0,useGrouping:!1})}}),Q=Array(6).fill(new Date().getFullYear()).map((a,t)=>{if(t===0)return{id:"",label:"Select Year",value:""};const e=a-(t-1);return{id:e.toString().toLowerCase(),label:e.toString(),value:e}}),$=[{label:"Select Account Type",value:""},{label:"Savings/Current Account",value:"account"},{label:"Credit Card",value:"creditCard"}],_=(a,t,e)=>E({queryKey:[...T.TRANSACTIONS,a,t],meta:{endpoint:`${A.TRANSACTIONS}consolidated/${a}-${t}`},enabled:!!(a&&t)}),q=()=>{var e,n;const a=C(),t=(n=(e=a.getDefaultOptions().queries)==null?void 0:e.meta)==null?void 0:n.baseUrl;return M({mutationFn:o=>Y(`${t}${A.TRANSACTIONS}${o.accountType}`,o.payload),onSuccess:()=>{a.invalidateQueries({queryKey:T.TRANSACTIONS})}})};function P(a,t,e){const n=C(),o=_(a,t),s=n.getQueryData(T.SOURCE_SETTINGS),c=n.getQueryData(T.CATEGORY_SETTINGS);return[N.useMemo(()=>{var m;return o.data?(m=o.data)==null?void 0:m.map(g=>{const u=c==null?void 0:c.find(r=>r.matchers.some(S=>{const d=S.split(" "),b=d.filter(f=>g.transactionSource.includes(f));return d.length===b.length})),l=s==null?void 0:s.find(r=>r.id===(u==null?void 0:u.sourceId));return{...g,category:u,source:l}}):[]},[c,s,o.data]),o]}const h="dd/MM/yyyy",I="dd MMM yyyy",v=(a,t=h)=>O(a,t,new Date),j=(a,t=I)=>D(R(a),t),y=(a=[])=>a.reduce((t,e)=>(t+=typeof e=="number"?e:e.amount,t),0),x=a=>a.map(t=>({date:v(t[0]),transactionSource:t[1],amount:Number(t[2].replaceAll(",",""))})),H=a=>{const t=Object.groupBy(a,e=>{var n;return((n=e.source)==null?void 0:n.name)??"others"});return delete t.others,Object.keys(t).map(e=>{var m,g,u;const n=(g=(m=t[e])==null?void 0:m[0].source)==null?void 0:g.isExpense,o=((u=t[e])==null?void 0:u[0].accountType)==="account",s=Object.groupBy(t[e]??[],l=>{var r;return((r=l.category)==null?void 0:r.name)??"misc"}),c=Object.keys(s).map(l=>{var S,d;const r=y(s[l]);return{categoryName:l,amount:r,budget:(d=(S=s[l])==null?void 0:S[0].category)==null?void 0:d.budget}}),p=y(c);return{title:e,isExpense:n,isAccount:o,total:p,transactions:c}})};export{$ as A,w as C,Q as L,B as M,x as a,q as b,G as c,j as f,H as g,y as t,P as u};
